@model ProyectoTesis.Models.ViewModels.ResultadoViewModel
@{
    ViewData["Title"] = "Resultado del Test";

    var nombresCategorias = new Dictionary<string, string>
    {
        { "R", "Realista" },
        { "I", "Investigador" },
        { "A", "Artístico" },
        { "S", "Social" },
        { "E", "Emprendedor" },
        { "C", "Convencional" }
    };

    var nombresOcean = new Dictionary<string, string>
    {
        { "O", "Apertura a la Experiencia" },
        { "C", "Responsabilidad (Conciencia)" },
        { "E", "Extraversión" },
        { "A", "Amabilidad" },
        { "N", "Neuroticismo (Estabilidad emocional inversa)" }
    };
}

<div class="text-center mb-12">
    <h2 class="text-4xl font-bold tracking-tight text-gray-900">Tu Perfil Vocacional</h2>
    <p class="mt-2 text-lg text-gray-600">
        Basado en tus respuestas, este es tu perfil combinando <b>RIASEC</b> y <b>Big Five (OCEAN)</b>.
    </p>
</div>

<div class="bg-white p-8 rounded-2xl shadow-lg border border-gray-200">
    <h3 class="text-2xl font-bold text-gray-900 mb-6">Resultados del Test</h3>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">

        <!-- Bloque RIASEC -->
        <div class="flex flex-col gap-6">
            <h4 class="text-xl font-semibold text-gray-800 mb-2">RIASEC</h4>
            @foreach (var cat in Model.PuntajesRiasec)
            {
                var porcentaje = Model.TotalRiasec > 0 ? (cat.Value * 100 / Model.TotalRiasec) : 0;
                var nombre = nombresCategorias.ContainsKey(cat.Key) ? nombresCategorias[cat.Key] : cat.Key;

                <div class="flex flex-col gap-2">
                    <div class="flex justify-between items-baseline">
                        <span class="text-lg font-semibold text-gray-800">@nombre</span>
                        <span class="text-lg font-bold text-blue-600">@porcentaje%</span>
                    </div>
                    <div class="w-full bg-gray-200 rounded-full h-3">
                        <div class="bg-blue-500 h-3 rounded-full" style="width:@porcentaje%"></div>
                    </div>
                </div>
            }
        </div>

        <!-- Bloque OCEAN -->
        <div class="bg-blue-50 p-6 rounded-xl shadow-md">
            <h4 class="text-xl font-semibold text-gray-800 mb-4 text-center">Big Five (OCEAN)</h4>
            <div class="flex flex-col gap-4">
                @foreach (var dim in Model.PuntajesOcean)
                {
                    var nombre = nombresOcean.ContainsKey(dim.Key) ? nombresOcean[dim.Key] : dim.Key;
                    var valor = Math.Round(dim.Value, 1);

                    <div class="flex flex-col gap-2">
                        <div class="flex justify-between items-baseline">
                            <span class="text-lg font-semibold text-gray-800">@nombre</span>
                            <span class="text-lg font-bold text-green-600">@valor</span>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-3">
                            <div class="bg-green-500 h-3 rounded-full" style="width:@(valor * 20)%"></div>
                        </div>
                    </div>
                }
            </div>
            <p class="mt-4 text-center text-gray-700 text-sm italic">
                @Model.PerfilOceanResumen
            </p>
        </div>
    </div>

    <!-- Perfil Combinado -->
    <div class="mt-10 bg-indigo-50 border border-indigo-200 rounded-xl p-6 text-center">
        <h4 class="text-2xl font-bold text-indigo-800">Perfil Combinado</h4>
        <p class="mt-3 text-lg font-semibold text-gray-900">@Model.PerfilRiasec</p>
        <p class="mt-2 text-gray-700">@Model.DES_RECOMENDACION_TX</p>
    </div>
</div>

<!-- Botón para ver recomendaciones -->
<div class="mt-8 flex justify-center">
    <a asp-action="Recomendaciones"
       asp-route-resultadoId="@Model.IDD_RESULTADO"
       class="bg-green-600 text-white font-bold py-3 px-8 rounded-lg shadow-md hover:bg-green-700 transition">
        Ver Carreras Recomendadas
    </a>
</div>

<!-- ==========================
     GRÁFICOS COMPLEMENTARIOS
     ========================== -->
<div class="mt-10 grid grid-cols-1 md:grid-cols-2 gap-8 justify-center items-center">
    <!-- RIASEC -->
    <div class="bg-white rounded-xl shadow-md p-6 border border-gray-200">
        <h4 class="text-xl font-bold text-indigo-700 mb-3 text-center">Gráfico RIASEC</h4>
        <canvas id="riasecRadarChart" width="380" height="380"></canvas>
    </div>

    <!-- OCEAN -->
    <div class="bg-white rounded-xl shadow-md p-6 border border-gray-200">
        <h4 class="text-xl font-bold text-green-700 mb-3 text-center">Gráfico OCEAN (Big Five)</h4>
        <canvas id="oceanRadarChart" width="380" height="380"></canvas>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
document.addEventListener("DOMContentLoaded", function () {
    if (window.__chartsRendered__) return;
    window.__chartsRendered__ = true;

    const safe = v => (isNaN(v) || v == null) ? 0 : v;

    // =========================
    // RIASEC Chart
    // =========================
    const ctxR = document.getElementById('riasecRadarChart').getContext('2d');
    const riasecLabels = ['Realista', 'Investigador', 'Artístico', 'Social', 'Emprendedor', 'Convencional'];
    const riasecRaw = [
        safe(@Model.PuntajesRiasec["R"]),
        safe(@Model.PuntajesRiasec["I"]),
        safe(@Model.PuntajesRiasec["A"]),
        safe(@Model.PuntajesRiasec["S"]),
        safe(@Model.PuntajesRiasec["E"]),
        safe(@Model.PuntajesRiasec["C"])
    ];
    const maxRiasec = Math.max(...riasecRaw);
    const riasecNorm = riasecRaw.map(v => maxRiasec > 0 ? (v / maxRiasec) * 5 : 0);

    new Chart(ctxR, {
        type: 'radar',
        data: {
            labels: riasecLabels,
            datasets: [{
                label: 'RIASEC',
                data: riasecNorm,
                backgroundColor: 'rgba(79, 70, 229, 0.25)',
                borderColor: 'rgba(79, 70, 229, 0.9)',
                pointBackgroundColor: 'rgba(79, 70, 229, 1)',
                borderWidth: 2,
                pointRadius: 4,
                fill: true
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { display: false },
                title: { display: true, text: 'Perfil Vocacional según RIASEC', font: { size: 14 } }
            },
            scales: {
                r: {
                    beginAtZero: true,
                    min: 0,
                    max: 5,
                    ticks: { stepSize: 1, color: '#555' },
                    grid: { color: 'rgba(0,0,0,0.1)' },
                    pointLabels: { color: '#333', font: { size: 12 } }
                }
            }
        }
    });

    // =========================
    // OCEAN Chart
    // =========================
    const ctxO = document.getElementById('oceanRadarChart').getContext('2d');
    const oceanLabels = ['Apertura', 'Responsabilidad', 'Extraversión', 'Amabilidad', 'Neuroticismo'];
    const oceanVals = [
        safe(@Math.Round(Model.PuntajesOcean["O"], 1)),
        safe(@Math.Round(Model.PuntajesOcean["C"], 1)),
        safe(@Math.Round(Model.PuntajesOcean["E"], 1)),
        safe(@Math.Round(Model.PuntajesOcean["A"], 1)),
        safe(@Math.Round(Model.PuntajesOcean["N"], 1))
    ];

    new Chart(ctxO, {
        type: 'radar',
        data: {
            labels: oceanLabels,
            datasets: [{
                label: 'OCEAN',
                data: oceanVals,
                backgroundColor: 'rgba(34, 197, 94, 0.25)',
                borderColor: 'rgba(22, 163, 74, 0.9)',
                pointBackgroundColor: 'rgba(22, 163, 74, 1)',
                borderWidth: 2,
                pointRadius: 4,
                fill: true
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { display: false },
                title: { display: true, text: 'Perfil de Personalidad Big Five (OCEAN)', font: { size: 14 } }
            },
            scales: {
                r: {
                    beginAtZero: true,
                    min: 0,
                    max: 5,
                    ticks: { stepSize: 1, color: '#555' },
                    grid: { color: 'rgba(0,0,0,0.1)' },
                    pointLabels: { color: '#333', font: { size: 12 } }
                }
            }
        }
    });
});
</script>
