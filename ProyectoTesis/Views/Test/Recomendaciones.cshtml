@model ProyectoTesis.Models.ViewModels.ResultadoViewModel
@{
    ViewData["Title"] = "Recomendaciones Vocacionales";
}

<div class="max-w-5xl mx-auto">

    <!-- Mensaje de éxito o error -->
    @if (TempData["Mensaje"] != null)
    {
        <div class="p-4 mb-6 text-sm rounded-lg 
                    @(TempData["Mensaje"].ToString().StartsWith("❌") 
                        ? "text-red-700 bg-red-100 border border-red-300" 
                        : "text-green-700 bg-green-100 border border-green-300")">
            @TempData["Mensaje"]
        </div>
    }

    <!-- Cabecera -->
    <div class="text-center mb-10">
        <h1 class="text-4xl font-extrabold text-gray-800 tracking-tight lg:text-5xl">
            Carreras sugeridas para ti
        </h1>
        <p class="mt-4 text-lg text-gray-500 max-w-2xl mx-auto">
            Basado en tu perfil combinado <b>@Model.PerfilRiasec</b> (RIASEC + OCEAN),
            el sistema ha identificado las carreras con mayor afinidad a tus intereses y rasgos de personalidad.
        </p>
    </div>

    <!-- Lista de carreras -->
    <div class="space-y-6">
        @if (Model.Carreras == null || !Model.Carreras.Any())
        {
            <div class="text-center text-gray-600 italic">
                No se encontraron recomendaciones disponibles en este momento.
            </div>
        }
        else
        {
            @foreach (var carrera in Model.Carreras)
            {
                var colorBarra = carrera.Score >= 80 ? "bg-green-500"
                               : carrera.Score >= 60 ? "bg-yellow-500"
                               : "bg-red-500";

                <div class="bg-white rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300 p-6 flex items-start gap-6 border border-gray-100">
                    <!-- Ícono -->
                    <div class="bg-indigo-100 text-indigo-600 flex items-center justify-center rounded-xl shrink-0 w-16 h-16">
                        <span class="material-symbols-outlined text-4xl">@carrera.Icono</span>
                    </div>

                    <!-- Información -->
                    <div class="flex-1">
                        <h3 class="text-xl font-semibold text-gray-800">@carrera.Nombre</h3>
                        <p class="mt-1 text-gray-600">@carrera.Descripcion</p>

                        <!-- Barra de afinidad -->
                        @if (carrera.Score > 0)
                        {
                            <div class="mt-4">
                                <div class="flex justify-between items-center text-sm text-gray-500 mb-1">
                                    <span>Afinidad con tu perfil</span>
                                    <span class="font-semibold text-indigo-700">@carrera.Score.ToString("F2")%</span>
                                </div>
                                <div class="w-full bg-gray-200 rounded-full h-3 overflow-hidden">
                                    <div class="@colorBarra h-3 rounded-full transition-all duration-700 ease-in-out"
                                         style="width:@Math.Min(carrera.Score, 100)%"></div>
                                </div>
                            </div>
                        }

                        <!-- Universidades -->
                        @if (carrera.Universidades != null && carrera.Universidades.Any())
                        {
                            <div class="mt-4 text-sm text-gray-600">
                                <p class="font-semibold text-gray-700 mb-1">Universidades recomendadas:</p>
                                <div class="flex flex-wrap gap-2">
                                    @foreach (var uni in carrera.Universidades)
                                    {
                                        <span class="inline-block bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs font-medium">
                                            @uni
                                        </span>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }
    </div>

    <!-- Botón de acción -->
    <div class="mt-12 flex justify-center bg-gray-50 py-6 rounded-lg shadow-inner">
        <a asp-action="Enviar"
           asp-controller="Test"
           asp-route-resultadoId="@Model.IDD_RESULTADO"
           class="flex items-center gap-2 px-6 py-3 rounded-lg bg-blue-600 
                  hover:bg-blue-700 text-white font-bold text-lg transition-colors shadow-lg">
            <span class="material-symbols-outlined">email</span>
            <span>Guardar resultados y enviar por correo</span>
        </a>
    </div>

    <div class="mt-6 flex justify-center">
        <a asp-action="ReiniciarTest"
        asp-controller="Test"
        class="px-5 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium transition">
            <span class="material-symbols-outlined align-middle">restart_alt</span>
            Iniciar nuevo test
        </a>
    </div>

</div>

<!-- Animación suave al cargar barras -->
<script>
document.addEventListener("DOMContentLoaded", () => {
    const bars = document.querySelectorAll(".transition-all");
    bars.forEach(bar => {
        const match = bar.getAttribute("style")?.match(/width:(\d+)%/);
        if (match) {
            const targetWidth = match[1];
            bar.style.width = "0%";
            setTimeout(() => { bar.style.width = targetWidth + "%"; }, 300);
        }
    });
});
</script>
