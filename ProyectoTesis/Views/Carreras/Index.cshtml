@model ProyectoTesis.Models.PerfilRIASEC
@{
    ViewData["Title"] = "Explora tus carreras ideales";
    Layout = "_Layout"; // usa tu layout principal
}

@section Styles {
<script>
tailwind.config = {
  darkMode: "class",
  theme: {
    extend: {
      colors: {
        "primary": "#13a4ec",
        "background-light": "#f6f7f8",
        "background-dark": "#101c22",
      },
      fontFamily: { "display": ["Inter"] },
      borderRadius: {
        "DEFAULT": "0.5rem",
        "lg": "1rem",
        "xl": "1.5rem",
        "full": "9999px"
      },
    },
  },
}
</script>
<style>
.material-symbols-outlined {
  font-variation-settings:
    'FILL' 0,
    'wght' 400,
    'GRAD' 0,
    'opsz' 24;
}
html { scroll-behavior: smooth; }
</style>
}

<div class="container mx-auto px-6 py-12">
    <div class="text-center mb-10">
        <h1 class="text-4xl md:text-5xl font-extrabold text-gray-900 dark:text-white">
            Explora tus carreras ideales
        </h1>
        <p class="mt-3 text-lg text-gray-600 dark:text-gray-400">
            Usa el buscador para encontrar tu carrera más rápido.
        </p>
    </div>

    <!--  Buscador -->
    <div class="relative mb-10 max-w-xl mx-auto">
        <span class="material-symbols-outlined absolute left-4 top-1/2 -translate-y-1/2 text-gray-500 dark:text-gray-400">search</span>
        <input id="searchInput" 
               type="text" 
               placeholder="Buscar carrera..." 
               class="w-full pl-12 pr-4 py-3 bg-white/70 dark:bg-gray-800/70 border border-gray-300 dark:border-gray-700 rounded-lg shadow-sm focus:ring-2 focus:ring-primary focus:border-primary text-gray-700 dark:text-gray-200 placeholder-gray-500 dark:placeholder-gray-400 transition-all duration-300">
    </div>

    <div class="flex justify-end mb-6">
        <button id="toggleAll" class="bg-primary/10 text-primary px-4 py-2 rounded-lg font-medium hover:bg-primary/20 transition">
            Expandir todo
        </button>
    </div>

    <div class="space-y-8" id="careerContainer">
        @foreach (var perfil in new[] { ("R", Model.R), ("I", Model.I), ("A", Model.A), ("S", Model.S), ("E", Model.E), ("C", Model.C) })
        {
            if (perfil.Item2 == null) { continue; }

            <section id="@perfil.Item1" class="career-section border border-gray-200 dark:border-gray-700 rounded-xl overflow-hidden bg-white/40 dark:bg-gray-900/30 shadow-md transition-all">
                <button class="w-full flex justify-between items-center px-6 py-4 bg-background-light dark:bg-background-dark hover:bg-primary/10 transition"
                        onclick="toggleSection('@perfil.Item1')">
                    <div class="flex items-center gap-3">
                        <span class="w-10 h-10 flex items-center justify-center bg-primary/10 text-primary rounded-lg">@perfil.Item1</span>
                        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">@GetPerfilNombre(perfil.Item1)</h2>
                    </div>
                    <span id="icon-@perfil.Item1" class="material-symbols-outlined text-primary transition-transform duration-300">expand_more</span>
                </button>

                <div id="content-@perfil.Item1" class="max-h-0 overflow-hidden transition-all duration-500 ease-in-out">
                    <div class="p-6 grid md:grid-cols-2 lg:grid-cols-3 gap-8">
                        @foreach (var categoria in perfil.Item2)
                        {
                            foreach (var carrera in categoria.Value)
                            {
                                var cardId = $"{perfil.Item1}-{carrera.carrera.Replace(" ", "_")}";
                                <div class="career-card relative bg-white dark:bg-gray-900/60 rounded-lg shadow hover:shadow-xl transition duration-300 overflow-hidden group" 
                                     data-nombre="@carrera.carrera.ToLower()">
                                    <div class="p-6 flex flex-col justify-between h-full">
                                        <div>
                                            <h3 class="text-xl font-bold text-gray-900 dark:text-white">@carrera.carrera</h3>
                                            <p class="mt-2 text-gray-600 dark:text-gray-400">@carrera.descripcion</p>
                                        </div>
                                        <button class="mt-6 bg-primary text-white px-4 py-2 rounded-lg font-medium hover:bg-primary/90 transition"
                                            onclick='handleCardClick("@cardId", "@carrera.carrera", "@carrera.descripcion", @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(carrera.universidades)))'>
                                            Ver más detalles
                                        </button>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </section>
        }

        <div class="mt-12 flex justify-center">
            <a href="/Test/Resultado" class="bg-primary text-white font-bold py-3 px-8 rounded-lg hover:bg-primary/90 transition-colors">
                Volver a resultados
            </a>
        </div>
    </div>
</div>

<!-- MODAL -->
<div id="careerModal" class="fixed inset-0 bg-black/40 hidden items-center justify-center z-50 backdrop-blur-sm">
  <div class="bg-white dark:bg-gray-900 rounded-xl shadow-2xl max-w-lg w-full mx-4 p-6 relative transform transition-all duration-300 scale-95 opacity-0" id="modalContent">
    <button onclick="closeModal()" class="absolute top-3 right-3 text-gray-500 hover:text-primary">
      <span class="material-symbols-outlined">close</span>
    </button>
    <img id="modalImage" class="w-full h-48 object-cover rounded-lg mb-4 shadow" src="" alt="Imagen de carrera">
    <h3 id="modalTitle" class="text-2xl font-bold text-gray-900 dark:text-white"></h3>
    <p id="modalDesc" class="mt-3 text-gray-600 dark:text-gray-400 leading-relaxed"></p>
    <div id="modalUniversidades" class="mt-4 text-sm text-gray-500 dark:text-gray-400"></div>
  </div>
</div>

@section Scripts {
<script>
// --- FILTRO DE BÚSQUEDA ---
document.getElementById("searchInput").addEventListener("input", function () {
    const query = this.value.toLowerCase().trim();
    const cards = document.querySelectorAll(".career-card");
    cards.forEach(card => {
        const name = card.dataset.nombre;
        card.style.display = name.includes(query) ? "block" : "none";
    });
});

// --- SECCIONES ---
function toggleSection(id) {
    const content = document.getElementById('content-' + id);
    const icon = document.getElementById('icon-' + id);
    if (content.style.maxHeight) {
        content.style.maxHeight = null;
        icon.style.transform = "rotate(0deg)";
    } else {
        content.style.maxHeight = content.scrollHeight + "px";
        icon.style.transform = "rotate(180deg)";
    }
}

// --- EXPANDIR / COLAPSAR TODO ---
document.getElementById("toggleAll").addEventListener("click", function() {
    const sections = document.querySelectorAll('[id^="content-"]');
    const icons = document.querySelectorAll('[id^="icon-"]');
    const isCollapsed = [...sections].every(sec => !sec.style.maxHeight);
    this.textContent = isCollapsed ? "Colapsar todo" : "Expandir todo";
    sections.forEach((sec, i) => {
        if (isCollapsed) {
            sec.style.maxHeight = sec.scrollHeight + "px";
            icons[i].style.transform = "rotate(180deg)";
        } else {
            sec.style.maxHeight = null;
            icons[i].style.transform = "rotate(0deg)";
        }
    });
});

// --- MODAL ---
function handleCardClick(id, title, desc, universidadesJson) {
    let universidades = [];
    try { universidades = JSON.parse(universidadesJson); }
    catch { universidades = Array.isArray(universidadesJson) ? universidadesJson : [universidadesJson]; }
    openModal(title, desc, universidades);
}

async function openModal(title, desc, universidades) {
  const modal = document.getElementById("careerModal");
  const modalContent = document.getElementById("modalContent");
  document.getElementById("modalTitle").innerText = title;
  document.getElementById("modalDesc").innerText = desc;
  document.getElementById("modalUniversidades").innerHTML = "<b>Universidades:</b> " + universidades.join(", ");

  const imageElement = document.getElementById("modalImage");
  imageElement.src = "";

  const CX = "647baf54f9bea4470";
  const API_KEY = "AIzaSyB9hT6E7RId4LvkZKZaFqYGyV9fjdvUFKI";
  async function buscarImagen(query) {
    const url = `https://www.googleapis.com/customsearch/v1?q=${encodeURIComponent(query)}&cx=${CX}&key=${API_KEY}&searchType=image&num=10&imgType=photo&imgSize=large`;
    const response = await fetch(url);
    const data = await response.json();
    if (!data.items) return null;
    for (const item of data.items) {
      const link = item.link;
      if (link.match(/\.(jpg|jpeg|png|webp)$/i)) {
        try {
          const head = await fetch(link, { method: "HEAD" });
          if (head.ok) return link;
        } catch (e) { continue; }
      }
    }
    return null;
  }

  const imgUrl = await buscarImagen(`${title} carrera universitaria Perú`);
  if (imgUrl) imageElement.src = imgUrl;

  modal.classList.remove("hidden");
  modal.classList.add("flex");
  setTimeout(() => {
    modalContent.classList.add("opacity-100", "scale-100");
    modalContent.classList.remove("opacity-0", "scale-95");
  }, 50);
}

function closeModal() {
  const modal = document.getElementById("careerModal");
  const modalContent = document.getElementById("modalContent");
  modalContent.classList.add("opacity-0", "scale-95");
  modalContent.classList.remove("opacity-100", "scale-100");
  setTimeout(() => {
    modal.classList.add("hidden");
    modal.classList.remove("flex");
  }, 200);
}
</script>
}

@functions {
    string GetPerfilNombre(string clave)
    {
        return clave switch
        {
            "R" => "Realista",
            "I" => "Investigador",
            "A" => "Artístico",
            "S" => "Social",
            "E" => "Emprendedor",
            "C" => "Convencional",
            _ => "General"
        };
    }
}
