// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoTesis.Data;

#nullable disable

namespace ProyectoTesis.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251008225330_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoTesis.Models.TBD_ENVIO", b =>
                {
                    b.Property<int>("IDD_ENVIO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDD_ENVIO"));

                    b.Property<string>("DES_CORREO_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FEC_ENVIADO")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IDD_RESULTADO")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IDD_ENVIO");

                    b.HasIndex("IDD_RESULTADO");

                    b.ToTable("TBD_ENVIOS", (string)null);
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBD_RESPUESTA", b =>
                {
                    b.Property<int>("IDD_REPOR")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDD_REPOR"));

                    b.Property<DateTime>("FEC_GUARDADO")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IDD_INTENTO")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IDD_PREGUNTA")
                        .HasColumnType("int");

                    b.Property<string>("VAL_RESPUESTA_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDD_REPOR");

                    b.HasIndex("IDD_INTENTO");

                    b.HasIndex("IDD_PREGUNTA");

                    b.ToTable("TBD_RESPUESTAS", (string)null);
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBL_EVENTO", b =>
                {
                    b.Property<long>("IDD_EVENTO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IDD_EVENTO"));

                    b.Property<string>("DES_DATOS_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FEC_CREADO")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IDD_SESION")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TIP_EVENTO_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDD_EVENTO");

                    b.HasIndex("IDD_SESION");

                    b.ToTable("TBL_EVENTOS", (string)null);
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_INTENTO", b =>
                {
                    b.Property<Guid>("IDD_INTENTO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FEC_COMPLETADO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FEC_INICIADO")
                        .HasColumnType("datetime2");

                    b.Property<byte>("IDD_MODULO")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("IDD_SESION")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IDD_INTENTO");

                    b.HasIndex("IDD_MODULO");

                    b.HasIndex("IDD_SESION");

                    b.ToTable("TBM_INTENTOS", (string)null);
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_RESULTADO", b =>
                {
                    b.Property<Guid>("IDD_RESULTADO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DES_RECOMENDACION_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FEC_CREADO")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IDD_PUBLICO")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDD_SESION")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LISTA_RECOMENDACIONES_JSON")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOM_PERFIL_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NUM_RECOMENDACIONES")
                        .HasColumnType("int");

                    b.HasKey("IDD_RESULTADO");

                    b.HasIndex("IDD_SESION")
                        .IsUnique();

                    b.ToTable("TBM_RESULTADOS", (string)null);
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_SATISFACCION", b =>
                {
                    b.Property<int>("IDD_SATISFACCION")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDD_SATISFACCION"));

                    b.Property<int>("CLARIDAD_RESULTADOS")
                        .HasColumnType("int");

                    b.Property<int>("FACILIDAD_USO")
                        .HasColumnType("int");

                    b.Property<DateTime>("FEC_REGISTRO")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IDD_SESION")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SATISFACCION_GLOBAL")
                        .HasColumnType("int");

                    b.Property<int>("UTILIDAD_RECOMENDACIONES")
                        .HasColumnType("int");

                    b.HasKey("IDD_SATISFACCION");

                    b.HasIndex("IDD_SESION")
                        .IsUnique();

                    b.ToTable("TBM_SATISFACCIONES", (string)null);
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_SESION", b =>
                {
                    b.Property<Guid>("IDD_SESION")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FEC_CREADO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FEC_FIN")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FEC_INICIO")
                        .HasColumnType("datetime2");

                    b.Property<string>("NOM_ESTAD_SES")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDD_SESION");

                    b.ToTable("TBM_SESIONES", (string)null);
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBT_MODULO", b =>
                {
                    b.Property<byte>("IDD_MODULO")
                        .HasColumnType("tinyint");

                    b.Property<string>("COD_MODULO_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOM_MODULO_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDD_MODULO");

                    b.ToTable("TBT_MODULOS", (string)null);

                    b.HasData(
                        new
                        {
                            IDD_MODULO = (byte)1,
                            COD_MODULO_TX = "RIASEC",
                            NOM_MODULO_TX = "Test RIASEC"
                        },
                        new
                        {
                            IDD_MODULO = (byte)2,
                            COD_MODULO_TX = "OCEAN",
                            NOM_MODULO_TX = "Test Big Five (OCEAN)"
                        });
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBT_PREGUNTA", b =>
                {
                    b.Property<int>("IDD_PREGUNTA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDD_PREGUNTA"));

                    b.Property<string>("COD_CATEGORIA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DES_PREGUNTA_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("IDD_MODULO")
                        .HasColumnType("tinyint");

                    b.HasKey("IDD_PREGUNTA");

                    b.HasIndex("IDD_MODULO");

                    b.ToTable("TBT_PREGUNTAS", (string)null);

                    b.HasData(
                        new
                        {
                            IDD_PREGUNTA = 1,
                            COD_CATEGORIA = "R",
                            DES_PREGUNTA_TX = "Me gusta realizar pequeñas reparaciones de equipos electrodomésticos.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 2,
                            COD_CATEGORIA = "R",
                            DES_PREGUNTA_TX = "Me gustaría trabajar en el servicio técnico de una empresa.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 3,
                            COD_CATEGORIA = "R",
                            DES_PREGUNTA_TX = "Me interesa conocer el diseño y funcionamiento de los equipos técnicos.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 4,
                            COD_CATEGORIA = "I",
                            DES_PREGUNTA_TX = "El trabajo científico me parece muy interesante.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 5,
                            COD_CATEGORIA = "I",
                            DES_PREGUNTA_TX = "Me interesan los descubrimientos científicos y las nuevas invenciones.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 6,
                            COD_CATEGORIA = "I",
                            DES_PREGUNTA_TX = "Me gustaría realizar estudios y descubrir la vacuna contra una enfermedad grave.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 7,
                            COD_CATEGORIA = "A",
                            DES_PREGUNTA_TX = "Sé tocar un instrumento musical o me gustaría aprender.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 8,
                            COD_CATEGORIA = "A",
                            DES_PREGUNTA_TX = "Me gusta ver exposiciones de esculturas, pintura o fotografía.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 9,
                            COD_CATEGORIA = "A",
                            DES_PREGUNTA_TX = "Me gustaría expresarme mediante una actividad creativa como la pintura, el dibujo o la música.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 10,
                            COD_CATEGORIA = "S",
                            DES_PREGUNTA_TX = "Me gustaría cuidar personas con enfermedades mentales.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 11,
                            COD_CATEGORIA = "S",
                            DES_PREGUNTA_TX = "Me sentiría bien ayudando a las demás personas a comprenderse.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 12,
                            COD_CATEGORIA = "S",
                            DES_PREGUNTA_TX = "En mi futuro trabajo me gustaría ayudar a personas con discapacidades.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 13,
                            COD_CATEGORIA = "E",
                            DES_PREGUNTA_TX = "Me las arreglo bien cuando tengo que organizar el trabajo de mis compañeros.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 14,
                            COD_CATEGORIA = "E",
                            DES_PREGUNTA_TX = "Me gusta tomar la palabra en diferentes discusiones y convencer a la gente.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 15,
                            COD_CATEGORIA = "E",
                            DES_PREGUNTA_TX = "Me gustaría desempeñar la presidencia de mi clase.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 16,
                            COD_CATEGORIA = "C",
                            DES_PREGUNTA_TX = "Me gusta llevar mis cuadernos de manera ordenada y limpia.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 17,
                            COD_CATEGORIA = "C",
                            DES_PREGUNTA_TX = "Me gusta respetar y cumplir las fechas límites.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 18,
                            COD_CATEGORIA = "C",
                            DES_PREGUNTA_TX = "Me gusta organizar mi trabajo día a día y para la semana.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 19,
                            COD_CATEGORIA = "E",
                            DES_PREGUNTA_TX = "Me considero el alma de la fiesta.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 20,
                            COD_CATEGORIA = "E",
                            DES_PREGUNTA_TX = "Prefiero no hablar mucho.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 21,
                            COD_CATEGORIA = "E",
                            DES_PREGUNTA_TX = "Me gusta iniciar conversaciones.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 22,
                            COD_CATEGORIA = "E",
                            DES_PREGUNTA_TX = "Suelo ser callado(a) cuando estoy con desconocidos.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 23,
                            COD_CATEGORIA = "A",
                            DES_PREGUNTA_TX = "Me intereso genuinamente por las personas.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 24,
                            COD_CATEGORIA = "A",
                            DES_PREGUNTA_TX = "A veces insulto o trato mal a la gente.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 25,
                            COD_CATEGORIA = "A",
                            DES_PREGUNTA_TX = "Tengo un corazón sensible.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 26,
                            COD_CATEGORIA = "A",
                            DES_PREGUNTA_TX = "No suelo interesarme mucho por los demás.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 27,
                            COD_CATEGORIA = "C",
                            DES_PREGUNTA_TX = "Siempre estoy preparado(a).",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 28,
                            COD_CATEGORIA = "C",
                            DES_PREGUNTA_TX = "Suelo dejar mis pertenencias tiradas o desordenadas.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 29,
                            COD_CATEGORIA = "C",
                            DES_PREGUNTA_TX = "Hago mis tareas de inmediato.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 30,
                            COD_CATEGORIA = "C",
                            DES_PREGUNTA_TX = "A veces evito o descuido mis obligaciones.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 31,
                            COD_CATEGORIA = "N",
                            DES_PREGUNTA_TX = "Normalmente me siento relajado(a).",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 32,
                            COD_CATEGORIA = "N",
                            DES_PREGUNTA_TX = "Me preocupo demasiado por las cosas.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 33,
                            COD_CATEGORIA = "N",
                            DES_PREGUNTA_TX = "Rara vez me siento triste o deprimido(a).",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 34,
                            COD_CATEGORIA = "N",
                            DES_PREGUNTA_TX = "Me altero o me enojo con facilidad.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 35,
                            COD_CATEGORIA = "O",
                            DES_PREGUNTA_TX = "Tengo un vocabulario rico y variado.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 36,
                            COD_CATEGORIA = "O",
                            DES_PREGUNTA_TX = "Me cuesta comprender ideas abstractas.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 37,
                            COD_CATEGORIA = "O",
                            DES_PREGUNTA_TX = "Suelo tener ideas excelentes o creativas.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 38,
                            COD_CATEGORIA = "O",
                            DES_PREGUNTA_TX = "No tengo mucha imaginación.",
                            IDD_MODULO = (byte)2
                        });
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBD_ENVIO", b =>
                {
                    b.HasOne("ProyectoTesis.Models.TBM_RESULTADO", "RESULTADO")
                        .WithMany("ENVIOS")
                        .HasForeignKey("IDD_RESULTADO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RESULTADO");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBD_RESPUESTA", b =>
                {
                    b.HasOne("ProyectoTesis.Models.TBM_INTENTO", "INTENTO")
                        .WithMany("RESPUESTAS")
                        .HasForeignKey("IDD_INTENTO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoTesis.Models.TBT_PREGUNTA", "PREGUNTA")
                        .WithMany("RESPUESTAS")
                        .HasForeignKey("IDD_PREGUNTA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("INTENTO");

                    b.Navigation("PREGUNTA");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBL_EVENTO", b =>
                {
                    b.HasOne("ProyectoTesis.Models.TBM_SESION", "SESION")
                        .WithMany("EVENTOS")
                        .HasForeignKey("IDD_SESION");

                    b.Navigation("SESION");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_INTENTO", b =>
                {
                    b.HasOne("ProyectoTesis.Models.TBT_MODULO", "MODULO")
                        .WithMany("INTENTOS")
                        .HasForeignKey("IDD_MODULO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoTesis.Models.TBM_SESION", "SESION")
                        .WithMany("INTENTOS")
                        .HasForeignKey("IDD_SESION")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MODULO");

                    b.Navigation("SESION");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_RESULTADO", b =>
                {
                    b.HasOne("ProyectoTesis.Models.TBM_SESION", "SESION")
                        .WithOne("RESULTADO")
                        .HasForeignKey("ProyectoTesis.Models.TBM_RESULTADO", "IDD_SESION")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SESION");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_SATISFACCION", b =>
                {
                    b.HasOne("ProyectoTesis.Models.TBM_SESION", "SESION")
                        .WithOne("SATISFACCION")
                        .HasForeignKey("ProyectoTesis.Models.TBM_SATISFACCION", "IDD_SESION")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SESION");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBT_PREGUNTA", b =>
                {
                    b.HasOne("ProyectoTesis.Models.TBT_MODULO", "MODULO")
                        .WithMany("PREGUNTAS")
                        .HasForeignKey("IDD_MODULO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MODULO");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_INTENTO", b =>
                {
                    b.Navigation("RESPUESTAS");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_RESULTADO", b =>
                {
                    b.Navigation("ENVIOS");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_SESION", b =>
                {
                    b.Navigation("EVENTOS");

                    b.Navigation("INTENTOS");

                    b.Navigation("RESULTADO");

                    b.Navigation("SATISFACCION");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBT_MODULO", b =>
                {
                    b.Navigation("INTENTOS");

                    b.Navigation("PREGUNTAS");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBT_PREGUNTA", b =>
                {
                    b.Navigation("RESPUESTAS");
                });
#pragma warning restore 612, 618
        }
    }
}
