// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoTesis.Data;

#nullable disable

namespace ProyectoTesis.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250924202947_AddCategoriaToPreguntaFixed")]
    partial class AddCategoriaToPreguntaFixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoTesis.Models.TBD_ENVIO", b =>
                {
                    b.Property<int>("IDD_ENVIO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDD_ENVIO"));

                    b.Property<string>("DES_CORREO_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FEC_ENVIADO")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IDD_RESULTADO")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IDD_ENVIO");

                    b.HasIndex("IDD_RESULTADO");

                    b.ToTable("TBD_ENVIOS", (string)null);
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBD_RESPUESTA", b =>
                {
                    b.Property<int>("IDD_REPOR")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDD_REPOR"));

                    b.Property<DateTime>("FEC_GUARDADO")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IDD_INTENTO")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IDD_PREGUNTA")
                        .HasColumnType("int");

                    b.Property<string>("VAL_RESPUESTA_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDD_REPOR");

                    b.HasIndex("IDD_INTENTO");

                    b.HasIndex("IDD_PREGUNTA");

                    b.ToTable("TBD_RESPUESTAS", (string)null);
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBL_EVENTO", b =>
                {
                    b.Property<long>("IDD_EVENTO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IDD_EVENTO"));

                    b.Property<string>("DES_DATOS_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FEC_CREADO")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IDD_SESION")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TIP_EVENTO_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDD_EVENTO");

                    b.HasIndex("IDD_SESION");

                    b.ToTable("TBL_EVENTOS", (string)null);
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_INTENTO", b =>
                {
                    b.Property<Guid>("IDD_INTENTO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FEC_COMPLETADO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FEC_INICIADO")
                        .HasColumnType("datetime2");

                    b.Property<byte>("IDD_MODULO")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("IDD_SESION")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IDD_INTENTO");

                    b.HasIndex("IDD_MODULO");

                    b.HasIndex("IDD_SESION");

                    b.ToTable("TBM_INTENTOS", (string)null);
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_RESULTADO", b =>
                {
                    b.Property<Guid>("IDD_RESULTADO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DES_RECOMENDACION_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FEC_CREADO")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IDD_PUBLICO")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDD_SESION")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NOM_PERFIL_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDD_RESULTADO");

                    b.HasIndex("IDD_SESION")
                        .IsUnique();

                    b.ToTable("TBM_RESULTADOS", (string)null);
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_SESION", b =>
                {
                    b.Property<Guid>("IDD_SESION")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FEC_CREADO")
                        .HasColumnType("datetime2");

                    b.Property<string>("NOM_ESTAD_SES")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDD_SESION");

                    b.ToTable("TBM_SESIONES", (string)null);
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBT_MODULO", b =>
                {
                    b.Property<byte>("IDD_MODULO")
                        .HasColumnType("tinyint");

                    b.Property<string>("COD_MODULO_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOM_MODULO_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDD_MODULO");

                    b.ToTable("TBT_MODULOS", (string)null);

                    b.HasData(
                        new
                        {
                            IDD_MODULO = (byte)1,
                            COD_MODULO_TX = "RIASEC",
                            NOM_MODULO_TX = "Test RIASEC"
                        },
                        new
                        {
                            IDD_MODULO = (byte)2,
                            COD_MODULO_TX = "MBTI",
                            NOM_MODULO_TX = "Test MBTI"
                        });
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBT_PREGUNTA", b =>
                {
                    b.Property<int>("IDD_PREGUNTA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDD_PREGUNTA"));

                    b.Property<string>("COD_CATEGORIA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DES_PREGUNTA_TX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("IDD_MODULO")
                        .HasColumnType("tinyint");

                    b.HasKey("IDD_PREGUNTA");

                    b.HasIndex("IDD_MODULO");

                    b.ToTable("TBT_PREGUNTAS", (string)null);

                    b.HasData(
                        new
                        {
                            IDD_PREGUNTA = 1,
                            COD_CATEGORIA = "R",
                            DES_PREGUNTA_TX = "Me gusta realizar pequeñas reparaciones de equipos electrodomésticos.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 2,
                            COD_CATEGORIA = "I",
                            DES_PREGUNTA_TX = "El trabajo científico me parece muy interesante.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 3,
                            COD_CATEGORIA = "A",
                            DES_PREGUNTA_TX = "Sé tocar un instrumento musical o me gustaría aprender.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 4,
                            COD_CATEGORIA = "S",
                            DES_PREGUNTA_TX = "Me gustaría cuidar personas con enfermedades mentales.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 5,
                            COD_CATEGORIA = "E",
                            DES_PREGUNTA_TX = "Me las arreglo bien cuando tengo que organizar el trabajo de mis compañeros, fijarles tareas y comprobar si han sido realizadas.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 6,
                            COD_CATEGORIA = "C",
                            DES_PREGUNTA_TX = "Me gusta llevar mis cuadernos de manera ordenada y limpia.",
                            IDD_MODULO = (byte)1
                        },
                        new
                        {
                            IDD_PREGUNTA = 7,
                            COD_CATEGORIA = "E",
                            DES_PREGUNTA_TX = "En un grupo nuevo, prefiero: (A) Conocer y hablar con varias personas / (B) Observar primero y hablar solo con algunas.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 8,
                            COD_CATEGORIA = "I",
                            DES_PREGUNTA_TX = "Cuando paso tiempo solo: (A) Me aburro fácilmente / (B) Me siento recargado.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 9,
                            COD_CATEGORIA = "E",
                            DES_PREGUNTA_TX = "En reuniones, suelo: (A) Hablar mucho y de manera espontánea / (B) Hablar solo cuando tengo algo importante.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 10,
                            COD_CATEGORIA = "I",
                            DES_PREGUNTA_TX = "Prefiero actividades: (A) Con mucha interacción social / (B) Tranquilas y personales.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 11,
                            COD_CATEGORIA = "E",
                            DES_PREGUNTA_TX = "Mis amigos me describen como: (A) Energético y sociable / (B) Reservado y reflexivo.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 12,
                            COD_CATEGORIA = "I",
                            DES_PREGUNTA_TX = "Cuando aprendo algo nuevo: (A) Me gusta discutirlo con otros / (B) Prefiero analizarlo solo.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 13,
                            COD_CATEGORIA = "E",
                            DES_PREGUNTA_TX = "Para relajarme: (A) Salgo con amigos / (B) Me quedo en casa leyendo o viendo algo.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 14,
                            COD_CATEGORIA = "I",
                            DES_PREGUNTA_TX = "En un viaje disfruto más: (A) Conocer mucha gente nueva / (B) Explorar a mi ritmo y en calma.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 15,
                            COD_CATEGORIA = "E",
                            DES_PREGUNTA_TX = "Al resolver un problema: (A) Pienso en voz alta con otros / (B) Reflexiono internamente.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 16,
                            COD_CATEGORIA = "I",
                            DES_PREGUNTA_TX = "Cuando me hacen una pregunta: (A) Contesto de inmediato / (B) Pienso antes de responder.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 17,
                            COD_CATEGORIA = "S",
                            DES_PREGUNTA_TX = "Prefiero fijarme en: (A) Los hechos concretos / (B) Las posibilidades futuras.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 18,
                            COD_CATEGORIA = "N",
                            DES_PREGUNTA_TX = "Cuando aprendo algo nuevo: (A) Necesito ejemplos prácticos / (B) Prefiero ideas y teorías generales.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 19,
                            COD_CATEGORIA = "S",
                            DES_PREGUNTA_TX = "Mi forma de trabajar es más: (A) Detallada y paso a paso / (B) Creativa y con saltos de ideas.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 20,
                            COD_CATEGORIA = "N",
                            DES_PREGUNTA_TX = "Al recordar algo tiendo a: (A) Enfocarme en los detalles / (B) Enfocarme en la idea principal.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 21,
                            COD_CATEGORIA = "S",
                            DES_PREGUNTA_TX = "En una conversación me gusta más: (A) Hablar de lo que está ocurriendo ahora / (B) Imaginar lo que podría ocurrir después.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 22,
                            COD_CATEGORIA = "N",
                            DES_PREGUNTA_TX = "Cuando sigo instrucciones: (A) Prefiero que sean claras y específicas / (B) Prefiero margen para interpretarlas.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 23,
                            COD_CATEGORIA = "S",
                            DES_PREGUNTA_TX = "Mis amigos dicen que soy: (A) Práctico y realista / (B) Soñador e imaginativo.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 24,
                            COD_CATEGORIA = "N",
                            DES_PREGUNTA_TX = "En un proyecto: (A) Me concentro en los pasos inmediatos / (B) Me concentro en el resultado final.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 25,
                            COD_CATEGORIA = "S",
                            DES_PREGUNTA_TX = "En clase me interesa más: (A) La aplicación práctica del tema / (B) La teoría y las conexiones.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 26,
                            COD_CATEGORIA = "N",
                            DES_PREGUNTA_TX = "En una historia: (A) Me fijo en los hechos / (B) Me fijo en el significado.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 27,
                            COD_CATEGORIA = "T",
                            DES_PREGUNTA_TX = "Al decidir: (A) Me baso en la lógica / (B) Me baso en lo que siento correcto.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 28,
                            COD_CATEGORIA = "F",
                            DES_PREGUNTA_TX = "Si un amigo comete un error: (A) Le digo directamente cómo mejorarlo / (B) Cuido sus sentimientos al corregirlo.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 29,
                            COD_CATEGORIA = "J",
                            DES_PREGUNTA_TX = "Prefiero: (A) Tener un plan definido / (B) Mantenerme flexible.",
                            IDD_MODULO = (byte)2
                        },
                        new
                        {
                            IDD_PREGUNTA = 30,
                            COD_CATEGORIA = "P",
                            DES_PREGUNTA_TX = "Antes de un viaje: (A) Organizo horarios y actividades / (B) Veo qué surge sobre la marcha.",
                            IDD_MODULO = (byte)2
                        });
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBD_ENVIO", b =>
                {
                    b.HasOne("ProyectoTesis.Models.TBM_RESULTADO", "RESULTADO")
                        .WithMany("ENVIOS")
                        .HasForeignKey("IDD_RESULTADO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RESULTADO");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBD_RESPUESTA", b =>
                {
                    b.HasOne("ProyectoTesis.Models.TBM_INTENTO", "INTENTO")
                        .WithMany("RESPUESTAS")
                        .HasForeignKey("IDD_INTENTO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoTesis.Models.TBT_PREGUNTA", "PREGUNTA")
                        .WithMany("RESPUESTAS")
                        .HasForeignKey("IDD_PREGUNTA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("INTENTO");

                    b.Navigation("PREGUNTA");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBL_EVENTO", b =>
                {
                    b.HasOne("ProyectoTesis.Models.TBM_SESION", "SESION")
                        .WithMany("EVENTOS")
                        .HasForeignKey("IDD_SESION");

                    b.Navigation("SESION");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_INTENTO", b =>
                {
                    b.HasOne("ProyectoTesis.Models.TBT_MODULO", "MODULO")
                        .WithMany("INTENTOS")
                        .HasForeignKey("IDD_MODULO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoTesis.Models.TBM_SESION", "SESION")
                        .WithMany("INTENTOS")
                        .HasForeignKey("IDD_SESION")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MODULO");

                    b.Navigation("SESION");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_RESULTADO", b =>
                {
                    b.HasOne("ProyectoTesis.Models.TBM_SESION", "SESION")
                        .WithOne("RESULTADO")
                        .HasForeignKey("ProyectoTesis.Models.TBM_RESULTADO", "IDD_SESION")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SESION");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBT_PREGUNTA", b =>
                {
                    b.HasOne("ProyectoTesis.Models.TBT_MODULO", "MODULO")
                        .WithMany("PREGUNTAS")
                        .HasForeignKey("IDD_MODULO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MODULO");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_INTENTO", b =>
                {
                    b.Navigation("RESPUESTAS");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_RESULTADO", b =>
                {
                    b.Navigation("ENVIOS");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBM_SESION", b =>
                {
                    b.Navigation("EVENTOS");

                    b.Navigation("INTENTOS");

                    b.Navigation("RESULTADO")
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBT_MODULO", b =>
                {
                    b.Navigation("INTENTOS");

                    b.Navigation("PREGUNTAS");
                });

            modelBuilder.Entity("ProyectoTesis.Models.TBT_PREGUNTA", b =>
                {
                    b.Navigation("RESPUESTAS");
                });
#pragma warning restore 612, 618
        }
    }
}
